//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("OrdersModel", "FK_echoOrders_echoCity", "echoCity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(echo.BLL.Orders.City), "echoOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(echo.BLL.Orders.Order))]
[assembly: EdmRelationshipAttribute("OrdersModel", "FK_echoOrders_echoCountries", "echoCountries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(echo.BLL.Orders.Country), "echoOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(echo.BLL.Orders.Order))]
[assembly: EdmRelationshipAttribute("OrdersModel", "FK_echoOrders_echoOrderStatus", "echoOrderStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(echo.BLL.Orders.OrderStatus), "echoOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(echo.BLL.Orders.Order))]
[assembly: EdmRelationshipAttribute("OrdersModel", "FK_echoOrdersItem_echoOrders", "echoOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(echo.BLL.Orders.Order), "echoOrdersItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(echo.BLL.Orders.OrdersItem))]

#endregion

namespace echo.BLL.Orders
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class OrdersEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект OrdersEntities, используя строку соединения из раздела "OrdersEntities" файла конфигурации приложения.
        /// </summary>
        public OrdersEntities() : base("name=OrdersEntities", "OrdersEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта OrdersEntities.
        /// </summary>
        public OrdersEntities(string connectionString) : base(connectionString, "OrdersEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта OrdersEntities.
        /// </summary>
        public OrdersEntities(EntityConnection connection) : base(connection, "OrdersEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OrdersItem> OrdersItems
        {
            get
            {
                if ((_OrdersItems == null))
                {
                    _OrdersItems = base.CreateObjectSet<OrdersItem>("OrdersItems");
                }
                return _OrdersItems;
            }
        }
        private ObjectSet<OrdersItem> _OrdersItems;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OrderStatus> OrderStatuses
        {
            get
            {
                if ((_OrderStatuses == null))
                {
                    _OrderStatuses = base.CreateObjectSet<OrderStatus>("OrderStatuses");
                }
                return _OrderStatuses;
            }
        }
        private ObjectSet<OrderStatus> _OrderStatuses;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<echoZone> echoZones
        {
            get
            {
                if ((_echoZones == null))
                {
                    _echoZones = base.CreateObjectSet<echoZone>("echoZones");
                }
                return _echoZones;
            }
        }
        private ObjectSet<echoZone> _echoZones;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MoscowDelivery> MoscowDeliveries
        {
            get
            {
                if ((_MoscowDeliveries == null))
                {
                    _MoscowDeliveries = base.CreateObjectSet<MoscowDelivery>("MoscowDeliveries");
                }
                return _MoscowDeliveries;
            }
        }
        private ObjectSet<MoscowDelivery> _MoscowDeliveries;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Cities. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Countries. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Orders. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OrdersItems. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrdersItems(OrdersItem ordersItem)
        {
            base.AddObject("OrdersItems", ordersItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OrderStatuses. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrderStatuses(OrderStatus orderStatus)
        {
            base.AddObject("OrderStatuses", orderStatus);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet echoZones. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToechoZones(echoZone echoZone)
        {
            base.AddObject("echoZones", echoZone);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MoscowDeliveries. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMoscowDeliveries(MoscowDelivery moscowDelivery)
        {
            base.AddObject("MoscowDeliveries", moscowDelivery);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrdersModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта City.
        /// </summary>
        /// <param name="city_RUS">Исходное значение свойства City_RUS.</param>
        /// <param name="cityID">Исходное значение свойства CityID.</param>
        /// <param name="zN">Исходное значение свойства ZN.</param>
        public static City CreateCity(global::System.String city_RUS, global::System.Int32 cityID, global::System.Int32 zN)
        {
            City city = new City();
            city.City_RUS = city_RUS;
            city.CityID = cityID;
            city.ZN = zN;
            return city;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City_ENG
        {
            get
            {
                return _City_ENG;
            }
            set
            {
                OnCity_ENGChanging(value);
                ReportPropertyChanging("City_ENG");
                _City_ENG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City_ENG");
                OnCity_ENGChanged();
            }
        }
        private global::System.String _City_ENG;
        partial void OnCity_ENGChanging(global::System.String value);
        partial void OnCity_ENGChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City_RUS
        {
            get
            {
                return _City_RUS;
            }
            set
            {
                OnCity_RUSChanging(value);
                ReportPropertyChanging("City_RUS");
                _City_RUS = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City_RUS");
                OnCity_RUSChanged();
            }
        }
        private global::System.String _City_RUS;
        partial void OnCity_RUSChanging(global::System.String value);
        partial void OnCity_RUSChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                if (_CityID != value)
                {
                    OnCityIDChanging(value);
                    ReportPropertyChanging("CityID");
                    _CityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityID");
                    OnCityIDChanged();
                }
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZN
        {
            get
            {
                return _ZN;
            }
            set
            {
                OnZNChanging(value);
                ReportPropertyChanging("ZN");
                _ZN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZN");
                OnZNChanged();
            }
        }
        private global::System.Int32 _ZN;
        partial void OnZNChanging(global::System.Int32 value);
        partial void OnZNChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrdersModel", "FK_echoOrders_echoCity", "echoOrders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("OrdersModel.FK_echoOrders_echoCity", "echoOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("OrdersModel.FK_echoOrders_echoCity", "echoOrders", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrdersModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Country.
        /// </summary>
        /// <param name="countryID">Исходное значение свойства CountryID.</param>
        /// <param name="countryNameEN">Исходное значение свойства CountryNameEN.</param>
        /// <param name="countryNameRU">Исходное значение свойства CountryNameRU.</param>
        public static Country CreateCountry(global::System.Int32 countryID, global::System.String countryNameEN, global::System.String countryNameRU)
        {
            Country country = new Country();
            country.CountryID = countryID;
            country.CountryNameEN = countryNameEN;
            country.CountryNameRU = countryNameRU;
            return country;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryNameEN
        {
            get
            {
                return _CountryNameEN;
            }
            set
            {
                OnCountryNameENChanging(value);
                ReportPropertyChanging("CountryNameEN");
                _CountryNameEN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryNameEN");
                OnCountryNameENChanged();
            }
        }
        private global::System.String _CountryNameEN;
        partial void OnCountryNameENChanging(global::System.String value);
        partial void OnCountryNameENChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryNameRU
        {
            get
            {
                return _CountryNameRU;
            }
            set
            {
                OnCountryNameRUChanging(value);
                ReportPropertyChanging("CountryNameRU");
                _CountryNameRU = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryNameRU");
                OnCountryNameRUChanged();
            }
        }
        private global::System.String _CountryNameRU;
        partial void OnCountryNameRUChanging(global::System.String value);
        partial void OnCountryNameRUChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sorted
        {
            get
            {
                return _Sorted;
            }
            set
            {
                OnSortedChanging(value);
                ReportPropertyChanging("Sorted");
                _Sorted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sorted");
                OnSortedChanged();
            }
        }
        private Nullable<global::System.Int32> _Sorted;
        partial void OnSortedChanging(Nullable<global::System.Int32> value);
        partial void OnSortedChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrdersModel", "FK_echoOrders_echoCountries", "echoOrders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("OrdersModel.FK_echoOrders_echoCountries", "echoOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("OrdersModel.FK_echoOrders_echoCountries", "echoOrders", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrdersModel", Name="echoZone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class echoZone : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта echoZone.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static echoZone CreateechoZone(global::System.Int32 id)
        {
            echoZone echoZone = new echoZone();
            echoZone.ID = id;
            return echoZone;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> QTY
        {
            get
            {
                return _QTY;
            }
            set
            {
                OnQTYChanging(value);
                ReportPropertyChanging("QTY");
                _QTY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QTY");
                OnQTYChanged();
            }
        }
        private Nullable<global::System.Int32> _QTY;
        partial void OnQTYChanging(Nullable<global::System.Int32> value);
        partial void OnQTYChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Zn0_1
        {
            get
            {
                return _Zn0_1;
            }
            set
            {
                OnZn0_1Changing(value);
                ReportPropertyChanging("Zn0_1");
                _Zn0_1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zn0_1");
                OnZn0_1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Zn0_1;
        partial void OnZn0_1Changing(Nullable<global::System.Decimal> value);
        partial void OnZn0_1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Zn0_2
        {
            get
            {
                return _Zn0_2;
            }
            set
            {
                OnZn0_2Changing(value);
                ReportPropertyChanging("Zn0_2");
                _Zn0_2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zn0_2");
                OnZn0_2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Zn0_2;
        partial void OnZn0_2Changing(Nullable<global::System.Decimal> value);
        partial void OnZn0_2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Zn1_1
        {
            get
            {
                return _Zn1_1;
            }
            set
            {
                OnZn1_1Changing(value);
                ReportPropertyChanging("Zn1_1");
                _Zn1_1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zn1_1");
                OnZn1_1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Zn1_1;
        partial void OnZn1_1Changing(Nullable<global::System.Decimal> value);
        partial void OnZn1_1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Zn1_2
        {
            get
            {
                return _Zn1_2;
            }
            set
            {
                OnZn1_2Changing(value);
                ReportPropertyChanging("Zn1_2");
                _Zn1_2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zn1_2");
                OnZn1_2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Zn1_2;
        partial void OnZn1_2Changing(Nullable<global::System.Decimal> value);
        partial void OnZn1_2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Zn2_1
        {
            get
            {
                return _Zn2_1;
            }
            set
            {
                OnZn2_1Changing(value);
                ReportPropertyChanging("Zn2_1");
                _Zn2_1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zn2_1");
                OnZn2_1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Zn2_1;
        partial void OnZn2_1Changing(Nullable<global::System.Decimal> value);
        partial void OnZn2_1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Zn2_2
        {
            get
            {
                return _Zn2_2;
            }
            set
            {
                OnZn2_2Changing(value);
                ReportPropertyChanging("Zn2_2");
                _Zn2_2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zn2_2");
                OnZn2_2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Zn2_2;
        partial void OnZn2_2Changing(Nullable<global::System.Decimal> value);
        partial void OnZn2_2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Zn3_1
        {
            get
            {
                return _Zn3_1;
            }
            set
            {
                OnZn3_1Changing(value);
                ReportPropertyChanging("Zn3_1");
                _Zn3_1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zn3_1");
                OnZn3_1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Zn3_1;
        partial void OnZn3_1Changing(Nullable<global::System.Decimal> value);
        partial void OnZn3_1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Zn3_2
        {
            get
            {
                return _Zn3_2;
            }
            set
            {
                OnZn3_2Changing(value);
                ReportPropertyChanging("Zn3_2");
                _Zn3_2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zn3_2");
                OnZn3_2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Zn3_2;
        partial void OnZn3_2Changing(Nullable<global::System.Decimal> value);
        partial void OnZn3_2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Zn4_1
        {
            get
            {
                return _Zn4_1;
            }
            set
            {
                OnZn4_1Changing(value);
                ReportPropertyChanging("Zn4_1");
                _Zn4_1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zn4_1");
                OnZn4_1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Zn4_1;
        partial void OnZn4_1Changing(Nullable<global::System.Decimal> value);
        partial void OnZn4_1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Zn4_2
        {
            get
            {
                return _Zn4_2;
            }
            set
            {
                OnZn4_2Changing(value);
                ReportPropertyChanging("Zn4_2");
                _Zn4_2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zn4_2");
                OnZn4_2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Zn4_2;
        partial void OnZn4_2Changing(Nullable<global::System.Decimal> value);
        partial void OnZn4_2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Zn5_1
        {
            get
            {
                return _Zn5_1;
            }
            set
            {
                OnZn5_1Changing(value);
                ReportPropertyChanging("Zn5_1");
                _Zn5_1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zn5_1");
                OnZn5_1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Zn5_1;
        partial void OnZn5_1Changing(Nullable<global::System.Decimal> value);
        partial void OnZn5_1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Zn5_2
        {
            get
            {
                return _Zn5_2;
            }
            set
            {
                OnZn5_2Changing(value);
                ReportPropertyChanging("Zn5_2");
                _Zn5_2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zn5_2");
                OnZn5_2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Zn5_2;
        partial void OnZn5_2Changing(Nullable<global::System.Decimal> value);
        partial void OnZn5_2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Zn6_1
        {
            get
            {
                return _Zn6_1;
            }
            set
            {
                OnZn6_1Changing(value);
                ReportPropertyChanging("Zn6_1");
                _Zn6_1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zn6_1");
                OnZn6_1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Zn6_1;
        partial void OnZn6_1Changing(Nullable<global::System.Decimal> value);
        partial void OnZn6_1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Zn6_2
        {
            get
            {
                return _Zn6_2;
            }
            set
            {
                OnZn6_2Changing(value);
                ReportPropertyChanging("Zn6_2");
                _Zn6_2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zn6_2");
                OnZn6_2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Zn6_2;
        partial void OnZn6_2Changing(Nullable<global::System.Decimal> value);
        partial void OnZn6_2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Zn7_1
        {
            get
            {
                return _Zn7_1;
            }
            set
            {
                OnZn7_1Changing(value);
                ReportPropertyChanging("Zn7_1");
                _Zn7_1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zn7_1");
                OnZn7_1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Zn7_1;
        partial void OnZn7_1Changing(Nullable<global::System.Decimal> value);
        partial void OnZn7_1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Zn7_2
        {
            get
            {
                return _Zn7_2;
            }
            set
            {
                OnZn7_2Changing(value);
                ReportPropertyChanging("Zn7_2");
                _Zn7_2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zn7_2");
                OnZn7_2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Zn7_2;
        partial void OnZn7_2Changing(Nullable<global::System.Decimal> value);
        partial void OnZn7_2Changed();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrdersModel", Name="MoscowDelivery")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MoscowDelivery : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MoscowDelivery.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="price">Исходное значение свойства Price.</param>
        public static MoscowDelivery CreateMoscowDelivery(global::System.Int32 id, global::System.Decimal price)
        {
            MoscowDelivery moscowDelivery = new MoscowDelivery();
            moscowDelivery.Id = id;
            moscowDelivery.Price = price;
            return moscowDelivery;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrdersModel", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Order.
        /// </summary>
        /// <param name="cityTypeID">Исходное значение свойства CityTypeID.</param>
        /// <param name="dateCreated">Исходное значение свойства DateCreated.</param>
        /// <param name="deliverSum">Исходное значение свойства DeliverSum.</param>
        /// <param name="deliverTypeID">Исходное значение свойства DeliverTypeID.</param>
        /// <param name="orderID">Исходное значение свойства OrderID.</param>
        /// <param name="orderNumber">Исходное значение свойства OrderNumber.</param>
        /// <param name="orderSum">Исходное значение свойства OrderSum.</param>
        /// <param name="totalSum">Исходное значение свойства TotalSum.</param>
        /// <param name="inCredit">Исходное значение свойства InCredit.</param>
        public static Order CreateOrder(global::System.Int32 cityTypeID, global::System.DateTime dateCreated, global::System.Decimal deliverSum, global::System.Int32 deliverTypeID, global::System.Int32 orderID, global::System.String orderNumber, global::System.Decimal orderSum, global::System.Decimal totalSum, global::System.Boolean inCredit)
        {
            Order order = new Order();
            order.CityTypeID = cityTypeID;
            order.DateCreated = dateCreated;
            order.DeliverSum = deliverSum;
            order.DeliverTypeID = deliverTypeID;
            order.OrderID = orderID;
            order.OrderNumber = orderNumber;
            order.OrderSum = orderSum;
            order.TotalSum = totalSum;
            order.InCredit = inCredit;
            return order;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddedBy
        {
            get
            {
                return _AddedBy;
            }
            set
            {
                OnAddedByChanging(value);
                ReportPropertyChanging("AddedBy");
                _AddedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddedBy");
                OnAddedByChanged();
            }
        }
        private global::System.String _AddedBy;
        partial void OnAddedByChanging(global::System.String value);
        partial void OnAddedByChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Adress
        {
            get
            {
                return _Adress;
            }
            set
            {
                OnAdressChanging(value);
                ReportPropertyChanging("Adress");
                _Adress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Adress");
                OnAdressChanged();
            }
        }
        private global::System.String _Adress;
        partial void OnAdressChanging(global::System.String value);
        partial void OnAdressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City2
        {
            get
            {
                return _City2;
            }
            set
            {
                OnCity2Changing(value);
                ReportPropertyChanging("City2");
                _City2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City2");
                OnCity2Changed();
            }
        }
        private global::System.String _City2;
        partial void OnCity2Changing(global::System.String value);
        partial void OnCity2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityIndex
        {
            get
            {
                return _CityIndex;
            }
            set
            {
                OnCityIndexChanging(value);
                ReportPropertyChanging("CityIndex");
                _CityIndex = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CityIndex");
                OnCityIndexChanged();
            }
        }
        private global::System.String _CityIndex;
        partial void OnCityIndexChanging(global::System.String value);
        partial void OnCityIndexChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityTypeID
        {
            get
            {
                return _CityTypeID;
            }
            set
            {
                OnCityTypeIDChanging(value);
                ReportPropertyChanging("CityTypeID");
                _CityTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityTypeID");
                OnCityTypeIDChanged();
            }
        }
        private global::System.Int32 _CityTypeID;
        partial void OnCityTypeIDChanging(global::System.Int32 value);
        partial void OnCityTypeIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DeliverSum
        {
            get
            {
                return _DeliverSum;
            }
            set
            {
                OnDeliverSumChanging(value);
                ReportPropertyChanging("DeliverSum");
                _DeliverSum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeliverSum");
                OnDeliverSumChanged();
            }
        }
        private global::System.Decimal _DeliverSum;
        partial void OnDeliverSumChanging(global::System.Decimal value);
        partial void OnDeliverSumChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeliverTypeID
        {
            get
            {
                return _DeliverTypeID;
            }
            set
            {
                OnDeliverTypeIDChanging(value);
                ReportPropertyChanging("DeliverTypeID");
                _DeliverTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeliverTypeID");
                OnDeliverTypeIDChanged();
            }
        }
        private global::System.Int32 _DeliverTypeID;
        partial void OnDeliverTypeIDChanging(global::System.Int32 value);
        partial void OnDeliverTypeIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FIO
        {
            get
            {
                return _FIO;
            }
            set
            {
                OnFIOChanging(value);
                ReportPropertyChanging("FIO");
                _FIO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FIO");
                OnFIOChanged();
            }
        }
        private global::System.String _FIO;
        partial void OnFIOChanging(global::System.String value);
        partial void OnFIOChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Home
        {
            get
            {
                return _Home;
            }
            set
            {
                OnHomeChanging(value);
                ReportPropertyChanging("Home");
                _Home = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Home");
                OnHomeChanged();
            }
        }
        private global::System.String _Home;
        partial void OnHomeChanging(global::System.String value);
        partial void OnHomeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Korpus
        {
            get
            {
                return _Korpus;
            }
            set
            {
                OnKorpusChanging(value);
                ReportPropertyChanging("Korpus");
                _Korpus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Korpus");
                OnKorpusChanged();
            }
        }
        private global::System.String _Korpus;
        partial void OnKorpusChanging(global::System.String value);
        partial void OnKorpusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                if (_OrderID != value)
                {
                    OnOrderIDChanging(value);
                    ReportPropertyChanging("OrderID");
                    _OrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderID");
                    OnOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _OrderID;
        partial void OnOrderIDChanging(global::System.Int32 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.String _OrderNumber;
        partial void OnOrderNumberChanging(global::System.String value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OrderSum
        {
            get
            {
                return _OrderSum;
            }
            set
            {
                OnOrderSumChanging(value);
                ReportPropertyChanging("OrderSum");
                _OrderSum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderSum");
                OnOrderSumChanged();
            }
        }
        private global::System.Decimal _OrderSum;
        partial void OnOrderSumChanging(global::System.Decimal value);
        partial void OnOrderSumChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String time1
        {
            get
            {
                return _time1;
            }
            set
            {
                Ontime1Changing(value);
                ReportPropertyChanging("time1");
                _time1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("time1");
                Ontime1Changed();
            }
        }
        private global::System.String _time1;
        partial void Ontime1Changing(global::System.String value);
        partial void Ontime1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String time2
        {
            get
            {
                return _time2;
            }
            set
            {
                Ontime2Changing(value);
                ReportPropertyChanging("time2");
                _time2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("time2");
                Ontime2Changed();
            }
        }
        private global::System.String _time2;
        partial void Ontime2Changing(global::System.String value);
        partial void Ontime2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalSum
        {
            get
            {
                return _TotalSum;
            }
            set
            {
                OnTotalSumChanging(value);
                ReportPropertyChanging("TotalSum");
                _TotalSum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalSum");
                OnTotalSumChanged();
            }
        }
        private global::System.Decimal _TotalSum;
        partial void OnTotalSumChanging(global::System.Decimal value);
        partial void OnTotalSumChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean InCredit
        {
            get
            {
                return _InCredit;
            }
            set
            {
                OnInCreditChanging(value);
                ReportPropertyChanging("InCredit");
                _InCredit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InCredit");
                OnInCreditChanged();
            }
        }
        private global::System.Boolean _InCredit;
        partial void OnInCreditChanging(global::System.Boolean value);
        partial void OnInCreditChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrdersModel", "FK_echoOrders_echoCity", "echoCity")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("OrdersModel.FK_echoOrders_echoCity", "echoCity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("OrdersModel.FK_echoOrders_echoCity", "echoCity").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("OrdersModel.FK_echoOrders_echoCity", "echoCity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("OrdersModel.FK_echoOrders_echoCity", "echoCity", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrdersModel", "FK_echoOrders_echoCountries", "echoCountries")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OrdersModel.FK_echoOrders_echoCountries", "echoCountries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OrdersModel.FK_echoOrders_echoCountries", "echoCountries").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OrdersModel.FK_echoOrders_echoCountries", "echoCountries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("OrdersModel.FK_echoOrders_echoCountries", "echoCountries", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrdersModel", "FK_echoOrders_echoOrderStatus", "echoOrderStatus")]
        public OrderStatus OrderStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatus>("OrdersModel.FK_echoOrders_echoOrderStatus", "echoOrderStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatus>("OrdersModel.FK_echoOrders_echoOrderStatus", "echoOrderStatus").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderStatus> OrderStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatus>("OrdersModel.FK_echoOrders_echoOrderStatus", "echoOrderStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderStatus>("OrdersModel.FK_echoOrders_echoOrderStatus", "echoOrderStatus", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrdersModel", "FK_echoOrdersItem_echoOrders", "echoOrdersItem")]
        public EntityCollection<OrdersItem> OrdersItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrdersItem>("OrdersModel.FK_echoOrdersItem_echoOrders", "echoOrdersItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrdersItem>("OrdersModel.FK_echoOrdersItem_echoOrders", "echoOrdersItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrdersModel", Name="OrdersItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrdersItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OrdersItem.
        /// </summary>
        /// <param name="orderItemID">Исходное значение свойства OrderItemID.</param>
        /// <param name="priceForSale">Исходное значение свойства PriceForSale.</param>
        /// <param name="prodSizeID">Исходное значение свойства ProdSizeID.</param>
        /// <param name="qty">Исходное значение свойства Qty.</param>
        public static OrdersItem CreateOrdersItem(global::System.Int32 orderItemID, global::System.Decimal priceForSale, global::System.Int32 prodSizeID, global::System.Int32 qty)
        {
            OrdersItem ordersItem = new OrdersItem();
            ordersItem.OrderItemID = orderItemID;
            ordersItem.PriceForSale = priceForSale;
            ordersItem.ProdSizeID = prodSizeID;
            ordersItem.Qty = qty;
            return ordersItem;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderItemID
        {
            get
            {
                return _OrderItemID;
            }
            set
            {
                if (_OrderItemID != value)
                {
                    OnOrderItemIDChanging(value);
                    ReportPropertyChanging("OrderItemID");
                    _OrderItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderItemID");
                    OnOrderItemIDChanged();
                }
            }
        }
        private global::System.Int32 _OrderItemID;
        partial void OnOrderItemIDChanging(global::System.Int32 value);
        partial void OnOrderItemIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PriceForSale
        {
            get
            {
                return _PriceForSale;
            }
            set
            {
                OnPriceForSaleChanging(value);
                ReportPropertyChanging("PriceForSale");
                _PriceForSale = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceForSale");
                OnPriceForSaleChanged();
            }
        }
        private global::System.Decimal _PriceForSale;
        partial void OnPriceForSaleChanging(global::System.Decimal value);
        partial void OnPriceForSaleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProdSizeID
        {
            get
            {
                return _ProdSizeID;
            }
            set
            {
                OnProdSizeIDChanging(value);
                ReportPropertyChanging("ProdSizeID");
                _ProdSizeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProdSizeID");
                OnProdSizeIDChanged();
            }
        }
        private global::System.Int32 _ProdSizeID;
        partial void OnProdSizeIDChanging(global::System.Int32 value);
        partial void OnProdSizeIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private global::System.Int32 _Qty;
        partial void OnQtyChanging(global::System.Int32 value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrdersModel", "FK_echoOrdersItem_echoOrders", "echoOrders")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("OrdersModel.FK_echoOrdersItem_echoOrders", "echoOrders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("OrdersModel.FK_echoOrdersItem_echoOrders", "echoOrders").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("OrdersModel.FK_echoOrdersItem_echoOrders", "echoOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("OrdersModel.FK_echoOrdersItem_echoOrders", "echoOrders", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrdersModel", Name="OrderStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderStatus : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OrderStatus.
        /// </summary>
        /// <param name="orderStatusID">Исходное значение свойства OrderStatusID.</param>
        /// <param name="orderStaus">Исходное значение свойства OrderStaus.</param>
        public static OrderStatus CreateOrderStatus(global::System.Int32 orderStatusID, global::System.String orderStaus)
        {
            OrderStatus orderStatus = new OrderStatus();
            orderStatus.OrderStatusID = orderStatusID;
            orderStatus.OrderStaus = orderStaus;
            return orderStatus;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderStatusID
        {
            get
            {
                return _OrderStatusID;
            }
            set
            {
                if (_OrderStatusID != value)
                {
                    OnOrderStatusIDChanging(value);
                    ReportPropertyChanging("OrderStatusID");
                    _OrderStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderStatusID");
                    OnOrderStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _OrderStatusID;
        partial void OnOrderStatusIDChanging(global::System.Int32 value);
        partial void OnOrderStatusIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderStaus
        {
            get
            {
                return _OrderStaus;
            }
            set
            {
                OnOrderStausChanging(value);
                ReportPropertyChanging("OrderStaus");
                _OrderStaus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrderStaus");
                OnOrderStausChanged();
            }
        }
        private global::System.String _OrderStaus;
        partial void OnOrderStausChanging(global::System.String value);
        partial void OnOrderStausChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrdersModel", "FK_echoOrders_echoOrderStatus", "echoOrders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("OrdersModel.FK_echoOrders_echoOrderStatus", "echoOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("OrdersModel.FK_echoOrders_echoOrderStatus", "echoOrders", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
